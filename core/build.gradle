plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java-library'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

group 'com.epam.esm'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    implementation 'com.amazonaws:aws-java-sdk-rds:1.12.183'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.184'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    implementation 'org.apache.commons:commons-dbcp2:2.9.0'
    implementation 'org.hibernate:hibernate-envers:5.6.5.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2:2.6.3'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


}

configurations.implementation {
    exclude group: 'org.springframework.boot', module:'spring-boot-starter-logging'
}
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "certappcore"
        property 'sonar.core.codeCoveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}

jar {
    archivesBaseName = 'cert-system-core'
    archiveVersion = '1.0-SNAPSHOT'
}